{
    "swagger": "2.0",
    "info": {
        "title": "recalot.com API",
        "description": "RESTful Recommendation Engine",
        "version": "0.1.1"
    },
    "host": "api.recalot.com",
    "schemes": [
        "http"
    ],
    "produces": [
        "application/json"
    ],
    "paths": {
        "/sources": {
            "get": {
                "summary": "Data Sources",
                "description": "The Sources endpoint returns information about the available, currently connected and connecting data sources. The response includes the information, state \nand configuration of the data source.\n",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "State of the requested data sources. Available states -> AVAILABLE, CONNECTING, READY",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "DataSources"
                ],
                "responses": {
                    "200": {
                        "description": "Returns an array of data sources",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataSourceShortInformation"
                            }
                        }
                    },
                    "default": {
                        "description": "Unexpected error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                }
            },
            "put": {
                "summary": "Connect Data Source",
                "description": "Connect available data sources to files, databases, etc. Each available data source has own additional parameters.",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "data-builder-id",
                        "in": "query",
                        "description": "ID of the data builder (data sources with the state READY)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "DataSources"
                ],
                "responses": {
                    "200": {
                        "description": "Data source successful created. Data sources is now connecting and should be available in a few moments.",
                        "schema": {
                            "$ref": "#/definitions/DataSourceShortInformation"
                        }
                    }
                }
            }
        },
        "/sources/{source-id}": {
            "get": {
                "summary": "Data source information",
                "description": "Returns information about the data source with the ID {source-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "DataSources"
                ],
                "responses": {
                    "200": {
                        "description": "Configuration information of the data source.",
                        "schema": {
                            "$ref": "#/definitions/DataSourceInformation"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update Data Source",
                "description": "Updates the data source with the ID {source-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "DataSources"
                ],
                "responses": {
                    "200": {
                        "description": "Data source successful updated. Data sources is now connecting and should be available in a few moments.",
                        "schema": {
                            "$ref": "#/definitions/DataSourceShortInformation"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete Data Source",
                "description": "Deletes the data source with the ID {source-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "DataSources"
                ],
                "responses": {
                    "200": {
                        "description": "Data source successful deleted.",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}": {
            "get": {
                "summary": "Data Source Information",
                "description": "Returns information about the data source with the ID {source-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Requested data source information",
                        "schema": {
                            "$ref": "#/definitions/DataSourceContentInformation"
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/items": {
            "get": {
                "summary": "Items of a Data Source",
                "description": "Returns the items of a data source.",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Requested items",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Item"
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Create Item",
                "description": "Create an item in the given data source",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Item successful created.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Message"
                            }
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/items/{item-id}": {
            "get": {
                "summary": "Item information",
                "description": "Return information of the item with the ID {item-id} in the data source with the Id {source-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "item-id",
                        "in": "path",
                        "description": "ID of the item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Requested information.",
                        "schema": {
                            "$ref": "#/definitions/Item"
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete item",
                "description": "Deletes the item with the ID {item-id} in the data source with the Id {source-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "item-id",
                        "in": "path",
                        "description": "ID of the item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Item successful deleted.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Message"
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Update item",
                "description": "Updates an item with the given information.",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "item-id",
                        "in": "path",
                        "description": "ID of the item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Item successful updated.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Message"
                            }
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/items/{item-id}/interactions": {
            "get": {
                "summary": "Get interactions with an item",
                "description": "Return interactions with an specific item.",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "item-id",
                        "in": "path",
                        "description": "ID of the item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Requested interactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Interaction"
                            }
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/users": {
            "get": {
                "summary": "Get users",
                "description": "Returns all users in the data source with the ID {source-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Requested users",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Create user",
                "description": "Create a user in the data source with the ID {source-id}. Not every data source support creation.",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "User successful created.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Message"
                            }
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/interactions": {
            "get": {
                "summary": "Get interactions",
                "description": "Returns all interaction in the data source with the ID {source-id}-",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Requested interactions.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Interaction"
                            }
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/interactions/{interaction-id}": {
            "get": {
                "summary": "Get Interaction Information",
                "description": "Return information about the interaction with the ID {interaction-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "interaction-id",
                        "in": "path",
                        "description": "ID of the interaction",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Requested information.",
                        "schema": {
                            "$ref": "#/definitions/Interaction"
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/users/{user-id}/items/{item-id}/interactions": {
            "get": {
                "summary": "Get all interactions of a user with a specific item",
                "description": "Returns all interactions of a user with the ID {user-id} with the item with the ID {item-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user-id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "item-id",
                        "in": "path",
                        "description": "ID of the item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Requested information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Interaction"
                            }
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/users/{user-id}": {
            "get": {
                "summary": "User Information",
                "description": "Return information about the user with the ID {user-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user-id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Request user information",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update user",
                "description": "Update the user with the ID {user-id} with the given information",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user-id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Updated user information.",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            }
        },
        "/data/sources/{source-id}/users/{user-id}/interactions": {
            "get": {
                "summary": "Get all interactions of a specific user.",
                "description": "Returns interactions of the user with the ID {user-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user-id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "page",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "page-size",
                        "in": "query",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "tags": [
                    "Data"
                ],
                "responses": {
                    "200": {
                        "description": "Lorem",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Interaction"
                            }
                        }
                    }
                }
            }
        },
        "/track/sources/{source-id}/users/{user-id}/item/{item-id}": {
            "post": {
                "summary": "Save interaction",
                "description": "Save interaction information",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "path",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user-id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "item-id",
                        "in": "path",
                        "description": "ID of the item",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "description": "type of the interaction",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "value of the interaction",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Track"
                ],
                "responses": {
                    "200": {
                        "description": "Interaction successful saved.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Message"
                            }
                        }
                    }
                }
            }
        },
        "/train": {
            "get": {
                "summary": "List all available recommenders",
                "description": "List all available recommenders",
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "AVAILABLE, TRAINING, or READY",
                        "required": false,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Train"
                ],
                "responses": {
                    "200": {
                        "description": "Requested recommenders.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecommenderInformation"
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Train new recommender",
                "description": "Train new recommender",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "source-id",
                        "in": "query",
                        "description": "ID of the data source",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "rec-builder-id",
                        "in": "query",
                        "description": "ID of the recommender builder (recommender with state AVAILABLE)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "query",
                        "description": "Wished ID of the trained recommender",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Train"
                ],
                "responses": {
                    "200": {
                        "description": "Information about the newly created recommender instance.",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecommenderInformation"
                            }
                        }
                    }
                }
            }
        },
        "/train/{recommender-id}": {
            "get": {
                "summary": "Get recommender",
                "description": "Get recommender information",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Train"
                ],
                "parameters": [
                    {
                        "name": "recommender-id",
                        "in": "path",
                        "description": "ID of the recommender",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RecommenderInformation"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete recommender",
                "description": "Delete recommender",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Train"
                ],
                "parameters": [
                    {
                        "name": "recommender-id",
                        "in": "path",
                        "description": "ID of the recommender",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recommender succesful deleted.",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                }
            },
            "put": {
                "summary": "Update recommender",
                "description": "Update recommender",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "recommender-id",
                        "in": "path",
                        "description": "ID of the recommender builder (recommender with state AVAILABLE)",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "output",
                        "in": "query",
                        "description": "json or xml",
                        "required": false,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Train"
                ],
                "responses": {
                    "200": {
                        "description": "Information about the updated recommender instance.",
                        "schema": {
                            "$ref": "#/definitions/RecommenderInformation"
                        }
                    }
                }
            }
        },
        "/rec/{recommender-id}": {
            "get": {
                "summary": "Compute recommendation with the given recommender",
                "description": "Compute recommendation and return the result",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Recommendations"
                ],
                "parameters": [
                    {
                        "name": "recommender-id",
                        "in": "path",
                        "description": "ID of the recommender",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested information",
                        "schema": {
                            "$ref": "#/definitions/RecommendationResult"
                        }
                    }
                }
            }
        },
        "/experiments": {
            "get": {
                "summary": "List experiments",
                "description": "List all experiments",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Experiment"
                ],
                "parameters": [
                    {
                        "name": "state",
                        "in": "query",
                        "description": "Experiment state",
                        "required": false,
                        "type": "string",
                        "enum": [
                            "RUNNING",
                            "FINISHED"
                        ]
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested information",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Experiment"
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Create experiment",
                "description": "Create new experiment",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Experiment"
                ],
                "parameters": [
                    {
                        "name": "rec-id",
                        "in": "query",
                        "description": "Recommender IDs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "splitter-id",
                        "in": "query",
                        "description": "Datasplitter ID",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "metric-ids",
                        "in": "query",
                        "description": "Metric IDs",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "source-id",
                        "in": "query",
                        "description": "Data source ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested information",
                        "schema": {
                            "$ref": "#/definitions/Experiment"
                        }
                    }
                }
            }
        },
        "/experiments/metrics": {
            "get": {
                "summary": "List available metrics",
                "description": "List available metrics",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Experiment"
                ],
                "responses": {
                    "200": {
                        "description": "Requested metrics",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Metric"
                            }
                        }
                    }
                }
            }
        },
        "/experiments/metrics/{metric-id}": {
            "get": {
                "summary": "Metric information",
                "description": "List information of the metric with the ID {splitter-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "metric-id",
                        "in": "path",
                        "description": "Metric ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Experiment"
                ],
                "responses": {
                    "200": {
                        "description": "Requested data splitter",
                        "schema": {
                            "$ref": "#/definitions/Metric"
                        }
                    }
                }
            }
        },
        "/experiments/splitters": {
            "get": {
                "summary": "List available data splitter",
                "description": "List available data splitter",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Experiment"
                ],
                "responses": {
                    "200": {
                        "description": "Requested data splitter",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataSplitter"
                            }
                        }
                    }
                }
            }
        },
        "/experiments/splitters/{splitter-id}": {
            "get": {
                "summary": "Data splitter information",
                "description": "List information of the data splitter with the ID {splitter-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "parameters": [
                    {
                        "name": "splitter-id",
                        "in": "path",
                        "description": "Data splitter ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "tags": [
                    "Experiment"
                ],
                "responses": {
                    "200": {
                        "description": "Requested data splitter",
                        "schema": {
                            "$ref": "#/definitions/DataSplitter"
                        }
                    }
                }
            }
        },
        "/experiments/{experiment-id}": {
            "get": {
                "summary": "Experiment information",
                "description": "List information of the experiment with the ID {experiment-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Experiment"
                ],
                "parameters": [
                    {
                        "name": "experiment-id",
                        "in": "path",
                        "description": "Experiment ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Requested experiment",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataSplitter"
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Delete experiment",
                "description": "Delete experiment with the ID {experiment-id}",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Experiment"
                ],
                "parameters": [
                    {
                        "name": "experiment-id",
                        "in": "path",
                        "description": "Experiment ID",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Experiment successful removed.",
                        "schema": {
                            "$ref": "#/definitions/Message"
                        }
                    }
                }
            }
        },
        "/onlineexperiments": {
            "get": {
                "summary": "List online experiments",
                "description": "List all online experiments",
                "produces": [
                    "application/json",
                    "application/xml"
                ],
                "tags": [
                    "Online Experiment"
                ],
                "responses": {
                    "200": {
                        "description": "Requested experiment",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OnlineExperiment"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "OnlineExperiment": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The ID of the current experiment"
                },
                "dataSourceId": {
                    "type": "string",
                    "description": "The ID of the experiment data source"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the experiment. READY = online experiment is ready, TRAINING = one of the recommender is still training",
                    "enum": [
                        "TRAIN",
                        "READY"
                    ]
                },
                "recommender": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OnlineRecommender"
                    }
                }
            }
        },
        "OnlineRecommender": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "The ID of the recommender."
                },
                "value": {
                    "type": "number",
                    "description": "The probability value of the recommender"
                }
            }
        },
        "DataSourceShortInformation": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The access ID of the current data source. The ID can be used for the initialization."
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the recommender. READY = recommender is ready, TRAINING = recommender is training, AVAILABLE = recommender is available",
                    "enum": [
                        "READY",
                        "TRAINING",
                        "AVAILABLE"
                    ]
                }
            }
        },
        "RecommendationResult": {
            "properties": {
                "recommender": {
                    "type": "string",
                    "description": "The ID of recommender"
                },
                "experimentId": {
                    "type": "string",
                    "description": "The ID of current experiment (optional)"
                },
                "resultId": {
                    "type": "string",
                    "description": "The ID of result (optional)"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecommendationItem"
                    }
                }
            }
        },
        "RecommendationItem": {
            "properties": {
                "itemId": {
                    "type": "string",
                    "description": "The ID of item"
                },
                "confidence": {
                    "type": "number",
                    "description": "Probability of the item"
                },
                "item": {
                    "type": "object",
                    "description": "Item content that can vary."
                }
            }
        },
        "RecommenderInformation": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The access ID of the current data source. The ID can be used for the initialization."
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the data source. READY = data source is ready, CONNECTING = data source is connecing, AVAILABLE = data source is available for connection",
                    "enum": [
                        "READY",
                        "CONNECTING",
                        "AVAILABLE"
                    ]
                }
            }
        },
        "DataSourceInformation": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "The access ID of the current data source. The ID can be used for the initialization."
                },
                "dataBuilderId": {
                    "type": "string"
                },
                "state": {
                    "type": "string",
                    "description": "The current state of the data source. READY = data source is ready, CONNECTING = data source is connecing, AVAILABLE = data source is available for connection",
                    "enum": [
                        "READY",
                        "CONNECTING",
                        "AVAILABLE"
                    ]
                },
                "configuration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConfigurationItem"
                    }
                },
                "interactionsCount": {
                    "type": "integer"
                },
                "itemsCount": {
                    "type": "integer"
                },
                "usersCount": {
                    "type": "integer"
                }
            }
        },
        "DataSourceContentInformation": {
            "properties": {
                "interactionsCount": {
                    "type": "integer"
                },
                "itemsCount": {
                    "type": "integer"
                },
                "usersCount": {
                    "type": "integer"
                }
            }
        },
        "ConfigurationItem": {
            "properties": {
                "key": {
                    "type": "string",
                    "description": "Configuration key"
                },
                "requirement": {
                    "type": "string",
                    "description": "Required or Optional"
                },
                "type": {
                    "type": "string",
                    "description": "String, Options, Boolean, Integer or Double",
                    "enum": [
                        "String",
                        "Options",
                        "Boolean",
                        "Integer",
                        "Double"
                    ]
                },
                "value": {
                    "type": "string",
                    "description": "default value"
                },
                "options": {
                    "type": "array",
                    "description": "Is only defined when the type is Options",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Item": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Item ID"
                },
                "content": {
                    "type": "object",
                    "description": "key value pair of the content"
                }
            }
        },
        "User": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "User ID"
                },
                "content": {
                    "type": "object",
                    "description": "key value pair of the content"
                }
            }
        },
        "Interaction": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Interaction ID"
                },
                "userId": {
                    "type": "string",
                    "description": "User ID"
                },
                "itemId": {
                    "type": "string",
                    "description": "Item ID"
                },
                "timeStamp": {
                    "type": "string",
                    "description": "datetime string"
                },
                "type": {
                    "type": "string",
                    "description": "interaction type e.g. rating, view, click"
                },
                "value": {
                    "type": "string"
                },
                "content": {
                    "type": "object",
                    "description": "additional content. key value pair of the content"
                }
            }
        },
        "Experiment": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Experiment ID"
                },
                "state": {
                    "type": "string",
                    "description": "RUNNING, WAITING or FINISHED",
                    "enum": [
                        "RUNNING",
                        "WAITING",
                        "FINISHED"
                    ]
                },
                "dataSourceId": {
                    "type": "string",
                    "description": "ID of the used data source"
                },
                "recommenderIds": {
                    "description": "Array of recommender IDs that are used within this experiment",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "result": {
                    "description": "Result",
                    "type": "object"
                }
            }
        },
        "DataSplitter": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "DataSplitter ID"
                },
                "description": {
                    "type": "string",
                    "description": "Description"
                },
                "nbFolds": {
                    "type": "string",
                    "description": "Number of folds"
                },
                "globalRandomSplit": {
                    "type": "string",
                    "description": "Use a global split and not a per-user split"
                },
                "configuration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConfigurationItem"
                    }
                }
            }
        },
        "Metric": {
            "properties": {
                "id": {
                    "type": "string",
                    "description": "Metric ID"
                },
                "description": {
                    "type": "string",
                    "description": "Description"
                },
                "configuration": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ConfigurationItem"
                    }
                }
            }
        },
        "Message": {
            "properties": {
                "status": {
                    "type": "string",
                    "description": "DEBUG, INFO, WARN, ERROR, or FATAL",
                    "enum": [
                        "INFO",
                        "DEBUG",
                        "WARN",
                        "ERROR",
                        "FATAL"
                    ]
                },
                "message": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "Error": {
            "properties": {
                "code": {
                    "type": "integer",
                    "format": "int32"
                },
                "message": {
                    "type": "string"
                },
                "fields": {
                    "type": "string"
                }
            }
        }
    }
}