package com.recalot.model.rec.recommender.mostpopular;

import com.recalot.common.Helper;
import com.recalot.common.communication.DataSet;
import com.recalot.common.communication.Interaction;
import com.recalot.common.communication.RecommendationResult;
import com.recalot.common.communication.RecommendedItem;
import com.recalot.common.exceptions.BaseException;
import com.recalot.common.interfaces.model.rec.Context;
import com.recalot.common.interfaces.model.rec.Recommender;


import java.io.IOException;
import java.util.*;

/**
 * @author matthaeus.schmedding
 */
public class MostPopularRecommender extends Recommender {

    private Map<String, String> config;
    private DataSet dataSet;
    private List<RecommendedItem> recommendedItems;
    private RecommendationResult result;

    protected MostPopularRecommender(String id, Map<String, String> config) throws BaseException {

        this.setId("most-popular");

    }

    @Override
    public void train() throws BaseException {

        Map<String, Integer> count = new LinkedHashMap<>();

        for (Interaction interaction : dataSet.getInteractions()) {
            Helper.incrementMapValue(count, interaction.getItemId());
        }

        this.recommendedItems = new ArrayList<>();

        count = Helper.sortByValueDescending(count);

        double sum = Helper.sum(count);
        for (String key : count.keySet()) {
            recommendedItems.add(new RecommendedItem(key, 1.0 * count.get(key) / sum));
        }

        this.result = new RecommendationResult(getId(), recommendedItems);
    }

    @Override
    public RecommendationResult recommend(String user, Context context) {
        return result;
    }

}
